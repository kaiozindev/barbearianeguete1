import React, { useState, useEffect, useRef } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { motion } from "framer-motion";

const TEMPO_MEDIO_MINUTOS = 40; // tempo médio de atendimento por pessoa

const ListaEspera = () => {
  const [usuarios, setUsuarios] = useState([]);
  const [nome, setNome] = useState("");
  const [telefone, setTelefone] = useState("");
  const nomeRef = useRef(null);
  const telefoneRef = useRef(null);
  const botaoRef = useRef(null);

  useEffect(() => {
    const interval = setInterval(() => {
      setUsuarios((prev) => [...prev]);
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  const adicionarUsuario = () => {
    if (!nome.trim() || !telefone.trim()) return;
    const nomeLimpo = nome.trim();
    const telefoneLimpo = telefone.trim();

    setUsuarios((prev) => [...prev, { nome: nomeLimpo, telefone: telefoneLimpo }]);
    setNome("");
    setTelefone("");
    nomeRef.current?.focus();
  };

  const sairDaFila = (nomeUsuario) => {
    setUsuarios((prev) => prev.filter((u) => u.nome !== nomeUsuario));
  };

  const atenderUsuario = () => {
    setUsuarios((prev) => prev.slice(1));
  };

  const calcularTempoEspera = (posicao) => (posicao - 1) * TEMPO_MEDIO_MINUTOS;

  const handleKeyDown = (e, campo) => {
    if (e.key === "Enter") {
      if (campo === "nome") {
        telefoneRef.current?.focus();
      } else if (campo === "telefone") {
        botaoRef.current?.focus();
      } else if (campo === "botao") {
        adicionarUsuario();
      }
    }
  };

  return (
    <div className="relative p-10 w-full min-h-screen bg-gradient-to-b from-gray-900 to-black text-white rounded-none shadow-2xl">
      <div className="absolute inset-0 grid grid-cols-4 grid-rows-4 gap-8 place-items-center pointer-events-none z-0">
        {Array.from({ length: 16 }).map((_, i) => (
          <span key={i} className="text-6xl font-black text-gray-700 opacity-10 select-none">
            Neguete
          </span>
        ))}
      </div>

      <div className="relative z-10 mb-8">
        <h1 className="text-6xl font-bold text-center text-gray-100">Lista de Espera</h1>
      </div>

      <div className="relative z-10 flex flex-col gap-4 mb-6 items-center">
        <Input
          ref={nomeRef}
          placeholder="Digite seu nome"
          value={nome}
          onChange={(e) => setNome(e.target.value)}
          onKeyDown={(e) => handleKeyDown(e, "nome")}
          className="rounded-full bg-gray-800 text-white placeholder-gray-400 text-lg px-6 py-4 max-w-md w-full"
        />
        <Input
          ref={telefoneRef}
          placeholder="Digite seu número de telefone"
          value={telefone}
          onChange={(e) => setTelefone(e.target.value)}
          onKeyDown={(e) => handleKeyDown(e, "telefone")}
          className="rounded-full bg-gray-800 text-white placeholder-gray-400 text-lg px-6 py-4 max-w-md w-full"
        />
        <Button
          ref={botaoRef}
          onClick={adicionarUsuario}
          onKeyDown={(e) => handleKeyDown(e, "botao")}
          className="rounded-full transition-transform duration-200 hover:scale-105 bg-gray-700 text-white text-lg px-8 py-4 max-w-md w-full"
        >
          Entrar na lista
        </Button>
      </div>

      <div className="relative z-10 flex justify-center mb-6">
        <Button
          onClick={atenderUsuario}
          className="rounded-full transition-transform duration-200 hover:scale-110 bg-gray-600 text-white text-2xl font-bold px-12 py-6 shadow-lg"
        >
          Atender próxima pessoa
        </Button>
      </div>

      <div className="relative z-10 space-y-4">
        {usuarios.length === 0 ? (
          <p className="text-center text-gray-400 text-lg">Nenhuma pessoa na lista.</p>
        ) : (
          usuarios.map((usuario, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: -10 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.3 }}
            >
              <Card className="bg-gray-800 shadow-lg rounded-2xl">
                <CardContent className="p-6">
                  <div className="flex justify-between items-center">
                    <div>
                      <p className="text-xl font-semibold text-white">{usuario.nome}</p>
                      <p className="text-md text-gray-400">{usuario.telefone}</p>
                      <p className="text-md text-gray-400">Posição: {index + 1}</p>
                      <p className="text-md text-gray-400">
                        Tempo estimado: {calcularTempoEspera(index + 1)} minutos
                      </p>
                    </div>
                    <Button
                      variant="destructive"
                      size="lg"
                      onClick={() => sairDaFila(usuario.nome)}
                      className="rounded-full transition-transform duration-200 hover:scale-105 bg-red-600 text-white text-md px-6 py-2"
                    >
                      Sair
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          ))
        )}
      </div>
    </div>
  );
};

export default ListaEspera;
